(() => { (new EventSource("/esbuild")).addEventListener('change', () => location.reload()); })();
import{game_default}from"./chunk-4Z7LUGWV.mjs";import"./chunk-GCAMSUYG.mjs";import"./chunk-LGFASB3Z.mjs";import"./chunk-SI7GNNLF.mjs";import"./chunk-TZI644A4.mjs";import"./chunk-K2ABSFVH.mjs";import"./chunk-LE7UWR4I.mjs";import"./chunk-6G3YM7QA.mjs";import"./chunk-6GXGR2B5.mjs";import{dimensions_default}from"./chunk-WE7ZGQYM.mjs";var canvas=document.getElementById("game-screen");var gameOverlay=document.getElementById("game-overlay");var scoreBoard=document.getElementById("score-board");var ARROW_DOWN="ArrowDown";var ARROW_UP="ArrowUp";var ARROW_LEFT="ArrowLeft";var ARROW_RIGHT="ArrowRight";window.addEventListener("DOMContentLoaded",()=>{const itemsSize=new dimensions_default(10,10);const game=new game_default(itemsSize,canvas);game.listenToGameStateChanges(gameState=>{const points=gameState.getPoints();scoreBoard.innerText=points+"";const isGameOver=gameState.getIsGameOver();if(isGameOver){game.stopGame();gameOverlay.style.pointerEvents="all";gameOverlay.style.touchAction="auto";gameOverlay.style.opacity="1";alert("GAME OVER!");listenToStartGame(game)}});listenToStartGame(game)});function listenToStartGame(game){window.addEventListener("keydown",()=>{startGame(game)},{once:true})}function startGame(game){scoreBoard.removeAttribute("hidden");gameOverlay.setAttribute("hidden","true");gameOverlay.style.pointerEvents="none";gameOverlay.style.touchAction="none";gameOverlay.style.opacity="0";scoreBoard.innerText="0";game.resetGame();game.startGame();window.addEventListener("keydown",e=>{const key=e.key;switch(key){case ARROW_DOWN:game.setPath("vertical");game.setDirection(1);break;case ARROW_UP:game.setPath("vertical");game.setDirection(-1);break;case ARROW_LEFT:game.setPath("horizontal");game.setDirection(-1);break;case ARROW_RIGHT:game.setPath("horizontal");game.setDirection(1);break}})}
